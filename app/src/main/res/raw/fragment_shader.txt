precision mediump float;

uniform vec3 u_light_position;

varying vec3 v_normal;
varying vec3 v_position;

vec3 dir_light_color = vec3(1.0, 1.0, 1.0);
vec3 obj_color = vec3(1.0, 1.0, 1.0);
void point_lighting();

void main()
{
   // Normal coloring
   //gl_FragColor = vec4(v_normal, 1.0);

   // Point lighting
   point_lighting();
}

void point_lighting()
{
    // Light vector
    vec3 L = normalize(u_light_position - v_position);

    // Normal vector
    vec3 N = normalize(v_normal);

    // Diffuse
    float k_d = 0.6;
    float dot_product = max(dot(N, L), 0.0);
    vec3 diffuse = k_d * dot_product * dir_light_color;

    // Ambient
    vec3 ambient = vec3(0.1, 0.1, 0.1);

    // Specular


    gl_FragColor = vec4(diffuse * obj_color + ambient * obj_color, 1.0);
}
